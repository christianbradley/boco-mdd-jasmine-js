// Generated by CoffeeScript 1.10.0
var configure,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

configure = function($) {
  var Generator, JasmineCoffee, JavascriptService, JavascriptSnippetsRenderer;
  if ($ == null) {
    $ = {};
  }
  if ($.Core == null) {
    $.Core = require("boco-mdd-jasmine-core").configure($);
  }
  if ($.reduceUnique == null) {
    $.reduceUnique = function(vals, val) {
      if (indexOf.call(vals, val) < 0) {
        vals.push(val);
      }
      return vals;
    };
  }
  JavascriptService = (function(superClass) {
    extend(JavascriptService, superClass);

    function JavascriptService() {
      return JavascriptService.__super__.constructor.apply(this, arguments);
    }

    JavascriptService.prototype.getVariableNames = function(code) {
      var match, pattern, results;
      pattern = /var ([$\w]+)/gm;
      results = [];
      while (match = pattern.exec(code)) {
        results.push(match[1]);
      }
      return results;
    };

    return JavascriptService;

  })($.Core.ScriptService);
  JavascriptSnippetsRenderer = (function(superClass) {
    extend(JavascriptSnippetsRenderer, superClass);

    function JavascriptSnippetsRenderer() {
      return JavascriptSnippetsRenderer.__super__.constructor.apply(this, arguments);
    }

    JavascriptSnippetsRenderer.prototype.renderInitializeFilesVariable = function(arg) {
      var variableName;
      variableName = arg.variableName;
      return "var " + variableName + " = {};";
    };

    JavascriptSnippetsRenderer.prototype.renderDescribeStart = function(arg) {
      var text;
      text = arg.text;
      return "describe(" + (JSON.stringify(text)) + ", function() {";
    };

    JavascriptSnippetsRenderer.prototype.renderInitializeVariables = function(arg) {
      var variableNames;
      variableNames = arg.variableNames;
      return "var " + (variableNames.join(', ')) + ";";
    };

    JavascriptSnippetsRenderer.prototype.renderBeforeEachStart = function() {
      return "beforeEach(function() {";
    };

    JavascriptSnippetsRenderer.prototype.renderAssignFile = function(arg) {
      var data, path, variableName;
      variableName = arg.variableName, path = arg.path, data = arg.data;
      return variableName + "[" + (JSON.stringify(path)) + "] = " + (JSON.stringify(data)) + ";";
    };

    JavascriptSnippetsRenderer.prototype.renderBeforeEachCode = function(arg) {
      var code;
      code = arg.code;
      return code;
    };

    JavascriptSnippetsRenderer.prototype.renderAfterEachStart = function() {
      return "afterEach(function() {";
    };

    JavascriptSnippetsRenderer.prototype.renderDeleteFile = function(arg) {
      var path, variableName;
      variableName = arg.variableName, path = arg.path;
      return "delete " + variableName + "[" + (JSON.stringify(path)) + "];";
    };

    JavascriptSnippetsRenderer.prototype.renderAssertionStart = function(arg) {
      var doneFunctionName, fnArgsStr, isAsync, text;
      text = arg.text, isAsync = arg.isAsync, doneFunctionName = arg.doneFunctionName;
      fnArgsStr = isAsync ? doneFunctionName : "";
      return "it(" + (JSON.stringify(text)) + ", function(" + fnArgsStr + ") {";
    };

    JavascriptSnippetsRenderer.prototype.renderAssertionCode = function(arg) {
      var code;
      code = arg.code;
      return code;
    };

    JavascriptSnippetsRenderer.prototype.renderAssertionEnd = function() {
      return "});";
    };

    JavascriptSnippetsRenderer.prototype.renderAfterEachEnd = function() {
      return "});";
    };

    JavascriptSnippetsRenderer.prototype.renderBeforeEachEnd = function() {
      return "});";
    };

    JavascriptSnippetsRenderer.prototype.renderDescribeEnd = function() {
      return "});";
    };

    return JavascriptSnippetsRenderer;

  })($.Core.SnippetsRenderer);
  Generator = (function(superClass) {
    extend(Generator, superClass);

    function Generator(props) {
      if (props == null) {
        props = {};
      }
      Generator.__super__.constructor.call(this, props);
      if (this.scriptService == null) {
        this.scriptService = new JavascriptService;
      }
      if (this.snippetsRenderer == null) {
        this.snippetsRenderer = new JavascriptSnippetsRenderer;
      }
    }

    return Generator;

  })($.Core.Generator);
  return JasmineCoffee = {
    configuration: $,
    configure: configure,
    JavascriptService: JavascriptService,
    JavascriptSnippetsRenderer: JavascriptSnippetsRenderer,
    Generator: Generator
  };
};

module.exports = configure();

//# sourceMappingURL=index.js.map
