// Generated by CoffeeScript 1.10.0
var configure,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  hasProp = {}.hasOwnProperty,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

configure = function($) {
  var CoffeeScriptService, CoffeeSnippetsRenderer, CoffeeToken, Generator, JasmineCoffee;
  if ($ == null) {
    $ = {};
  }
  if ($.Core == null) {
    $.Core = require("boco-mdd-jasmine-core").configure($);
  }
  if ($.CoffeeScript == null) {
    $.CoffeeScript = require("coffee-script");
  }
  if ($.reduceUnique == null) {
    $.reduceUnique = function(vals, val) {
      if (indexOf.call(vals, val) < 0) {
        vals.push(val);
      }
      return vals;
    };
  }
  CoffeeToken = (function() {
    CoffeeToken.prototype.type = null;

    CoffeeToken.prototype.value = null;

    CoffeeToken.prototype.variable = null;

    CoffeeToken.prototype.firstLine = null;

    CoffeeToken.prototype.firstColumn = null;

    CoffeeToken.prototype.lastLine = null;

    CoffeeToken.prototype.lastColumn = null;

    function CoffeeToken(props) {
      var key, val;
      if (props == null) {
        props = {};
      }
      for (key in props) {
        if (!hasProp.call(props, key)) continue;
        val = props[key];
        this[key] = val;
      }
    }

    CoffeeToken.isVariable = function(token) {
      return token.type === "IDENTIFIER" && token.variable;
    };

    CoffeeToken.getValue = function(token) {
      return token.value;
    };

    CoffeeToken.convert = function(csToken) {
      var first_column, first_line, last_column, last_line, ref, type, value;
      type = csToken[0], value = csToken[1], (ref = csToken[2], first_line = ref.first_line, first_column = ref.first_column, last_line = ref.last_line, last_column = ref.last_column);
      return new CoffeeToken({
        type: type,
        value: value,
        variable: csToken.variable,
        firstLine: first_line,
        firstColumn: first_column,
        lastLine: last_line,
        lastColumn: last_column
      });
    };

    return CoffeeToken;

  })();
  CoffeeScriptService = (function(superClass) {
    extend(CoffeeScriptService, superClass);

    function CoffeeScriptService() {
      return CoffeeScriptService.__super__.constructor.apply(this, arguments);
    }

    CoffeeScriptService.prototype.tokenize = function(code) {
      return $.CoffeeScript.tokens(code).map(CoffeeToken.convert);
    };

    CoffeeScriptService.prototype.getVariableNames = function(code) {
      var names, tokens;
      tokens = this.tokenize(code).filter(CoffeeToken.isVariable);
      names = tokens.map(CoffeeToken.getValue);
      return names.reduce($.reduceUnique, []);
    };

    return CoffeeScriptService;

  })($.Core.ScriptService);
  CoffeeSnippetsRenderer = (function(superClass) {
    extend(CoffeeSnippetsRenderer, superClass);

    function CoffeeSnippetsRenderer() {
      return CoffeeSnippetsRenderer.__super__.constructor.apply(this, arguments);
    }

    CoffeeSnippetsRenderer.prototype.renderInitializeFilesVariable = function(arg) {
      var variableName;
      variableName = arg.variableName;
      return variableName + " = {}";
    };

    CoffeeSnippetsRenderer.prototype.renderDescribeStart = function(arg) {
      var text;
      text = arg.text;
      return "describe " + (JSON.stringify(text)) + ", ->";
    };

    CoffeeSnippetsRenderer.prototype.renderInitializeVariables = function(arg) {
      var variableNames;
      variableNames = arg.variableNames;
      return "[" + (variableNames.join(', ')) + "] = []";
    };

    CoffeeSnippetsRenderer.prototype.renderBeforeEachStart = function() {
      return "beforeEach ->";
    };

    CoffeeSnippetsRenderer.prototype.renderAssignFile = function(arg) {
      var data, path, variableName;
      variableName = arg.variableName, path = arg.path, data = arg.data;
      return variableName + "[" + (JSON.stringify(path)) + "] = " + (JSON.stringify(data));
    };

    CoffeeSnippetsRenderer.prototype.renderBeforeEachCode = function(arg) {
      var code;
      code = arg.code;
      return code;
    };

    CoffeeSnippetsRenderer.prototype.renderAfterEachStart = function() {
      return "afterEach ->";
    };

    CoffeeSnippetsRenderer.prototype.renderDeleteFile = function(arg) {
      var path, variableName;
      variableName = arg.variableName, path = arg.path;
      return "delete " + variableName + "[" + (JSON.stringify(path)) + "]";
    };

    CoffeeSnippetsRenderer.prototype.renderAssertionStart = function(arg) {
      var doneFunctionName, fnArgsStr, isAsync, text;
      text = arg.text, isAsync = arg.isAsync, doneFunctionName = arg.doneFunctionName;
      fnArgsStr = isAsync ? "(" + doneFunctionName + ") " : "";
      return "it " + (JSON.stringify(text)) + ", " + fnArgsStr + "->";
    };

    CoffeeSnippetsRenderer.prototype.renderAssertionCode = function(arg) {
      var code;
      code = arg.code;
      return code;
    };

    CoffeeSnippetsRenderer.prototype.renderAssertionEnd = function() {
      return null;
    };

    CoffeeSnippetsRenderer.prototype.renderAfterEachEnd = function() {
      return null;
    };

    CoffeeSnippetsRenderer.prototype.renderBeforeEachEnd = function() {
      return null;
    };

    CoffeeSnippetsRenderer.prototype.renderDescribeEnd = function() {
      return null;
    };

    return CoffeeSnippetsRenderer;

  })($.Core.SnippetsRenderer);
  Generator = (function(superClass) {
    extend(Generator, superClass);

    function Generator(props) {
      if (props == null) {
        props = {};
      }
      Generator.__super__.constructor.call(this, props);
      if (this.scriptService == null) {
        this.scriptService = new CoffeeScriptService;
      }
      if (this.snippetsRenderer == null) {
        this.snippetsRenderer = new CoffeeSnippetsRenderer;
      }
    }

    return Generator;

  })($.Core.Generator);
  return JasmineCoffee = {
    configuration: $,
    configure: configure,
    CoffeeToken: CoffeeToken,
    CoffeeScriptService: CoffeeScriptService,
    CoffeeSnippetsRenderer: CoffeeSnippetsRenderer,
    Generator: Generator
  };
};

module.exports = configure();

//# sourceMappingURL=index.js.map
